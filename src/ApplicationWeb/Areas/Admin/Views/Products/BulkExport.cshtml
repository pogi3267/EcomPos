@{
    ViewData["Titel"] = "Bulk Export";
}

@{
    var pageId = ViewBag.PageName + "-" + ViewBag.MenuId;
    var divDetailsId = "divDetails" + pageId;
}

<style>
    #bandImage {
        height: 125px;
        width: 125px;
    }

    .divImport {
        color: #004085;
        background-color: #cce5ff;
        border-color: #b8daff;
        margin-bottom: 0;
        margin-top: 10px;
    }
</style>

<div class="d-flex flex-column-fluid container row col-sm-12 mt-3" id="@pageId">
    <div class="col-sm-8" id="@divDetailsId">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0 h6">Product Bulk Export</h5>
            </div>
            <div class="card-body">
                <div class="alert divImport">
                    <strong>Step 1:</strong>
                    <p>1. Click on the "Download CSV" button to export your product data in a CSV format.</p>
                    <p>2. Open the downloaded file to view your current product listings, including details such as price, stock, and categories.</p>
                    <p>3. Make any necessary changes to the data in the CSV file (e.g., update product details or add new products).</p>
                    <p>4. Save the updated file and prepare it for re-import if necessary.</p>
                </div>
                <br>
                <div class="">
                    <button class="btn btn-info" onclick="downloadProductsCSV()">Download CSV</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        const GetPageInformation = function () {
            return {
                pageName: "@ViewBag.PageName",
                menuId: "@ViewBag.MenuId",
            };
        };

        document.addEventListener('DOMContentLoaded', function () {
            function downloadProductsCSV() {
                $.ajax({
                    url: '/api/BulkAction/ExportProducts',
                    type: 'GET',
                    headers: {
                        Authorization: 'Bearer ' + GetToken()
                    },
                    xhrFields: {
                        responseType: 'blob'
                    },
                    success: function (data, status, xhr) {
                        var filename = "";
                        var disposition = xhr.getResponseHeader('Content-Disposition');
                        if (disposition && disposition.indexOf('attachment') !== -1) {
                            var filenameRegex = /filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/;
                            var matches = filenameRegex.exec(disposition);
                            if (matches != null && matches[1]) filename = matches[1].replace(/['"]/g, '');
                        }

                        var blob = new Blob([data], { type: 'xlsx' });
                        var link = document.createElement('a');
                        link.href = window.URL.createObjectURL(blob);
                        link.download = filename || 'export.csv';
                        document.body.appendChild(link);
                        link.click();
                        document.body.removeChild(link);
                    },
                    error: function (xhr, status, error) {
                        alert('Error exporting CSV: ' + (xhr.responseText || error));
                    }
                });
            }
            window.downloadProductsCSV = downloadProductsCSV;
        });
    </script>
}
