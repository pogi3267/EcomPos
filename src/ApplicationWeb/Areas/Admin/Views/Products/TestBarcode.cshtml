@{
    ViewData["Title"] = "Test Barcode";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">Test Barcode Functionality</h4>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <h5>Test API Calls</h5>
                            <button class="btn btn-primary mb-2" onclick="testGetProducts()">Test Get Products</button>
                            <button class="btn btn-info mb-2" onclick="testSearchProducts()">Test Search Products</button>
                            <button class="btn btn-success mb-2" onclick="testAddProduct()">Test Add Product</button>
                            
                            <div id="apiResults" class="mt-3">
                                <h6>API Results:</h6>
                                <pre id="resultsDisplay" style="background: #f8f9fa; padding: 10px; border-radius: 5px; max-height: 300px; overflow-y: auto;"></pre>
                            </div>
                        </div>
                        
                        <div class="col-md-6">
                            <h5>Selected Products</h5>
                            <div id="selectedProductsDisplay">
                                <p class="text-muted">No products selected</p>
                            </div>
                            
                            <h5>Debug Info</h5>
                            <div id="debugInfo">
                                <p>Selected Products Count: <span id="productsCount">0</span></p>
                                <p>Table Visible: <span id="tableVisible">false</span></p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    let selectedProducts = [];
    
    function testGetProducts() {
        console.log('Testing GetProductsForBarcode API...');
        $.ajax({
            url: '/Admin/Products/GetProductsForBarcode',
            type: 'GET',
            success: function(response) {
                console.log('GetProductsForBarcode success:', response);
                displayResults('GetProductsForBarcode', response);
            },
            error: function(xhr, status, error) {
                console.error('GetProductsForBarcode error:', xhr, status, error);
                displayResults('GetProductsForBarcode Error', { error: error, status: status });
            }
        });
    }
    
    function testSearchProducts() {
        console.log('Testing SearchProductsForBarcode API...');
        $.ajax({
            url: '/Admin/Products/SearchProductsForBarcode',
            type: 'GET',
            data: { searchTerm: 'test' },
            success: function(response) {
                console.log('SearchProductsForBarcode success:', response);
                displayResults('SearchProductsForBarcode', response);
            },
            error: function(xhr, status, error) {
                console.error('SearchProductsForBarcode error:', xhr, status, error);
                displayResults('SearchProductsForBarcode Error', { error: error, status: status });
            }
        });
    }
    
    function testAddProduct() {
        console.log('Testing Add Product functionality...');
        
        const testProduct = {
            productId: 1,
            name: 'Test Product',
            productSKU: 'TEST001',
            barcode: '1234567890123',
            unitPrice: 100,
            hasVariants: false,
            variants: [],
            categoryName: 'Test Category'
        };
        
        addProductToList(testProduct);
        updateDebugInfo();
    }
    
    function addProductToList(product) {
        console.log('Adding product to list:', product);
        
        if (selectedProducts.length >= 1) {
            alert('Please select only one product at a time to print barcode.');
            return;
        }

        const productItem = {
            id: product.productId,
            name: product.name,
            code: product.productSKU || product.barcode || 'N/A',
            variant: product.selectedVariant ? product.selectedVariant.attributes : 'No variant',
            variantId: product.selectedVariant ? product.selectedVariant.variantId : null,
            price: product.selectedVariant ? product.selectedVariant.regularPrice : product.unitPrice,
            quantity: 1
        };

        console.log('Created product item:', productItem);
        selectedProducts = [productItem];
        displaySelectedProducts();
        updateDebugInfo();
        
        console.log('Product added successfully. Total products:', selectedProducts.length);
    }
    
    function displaySelectedProducts() {
        const container = $('#selectedProductsDisplay');
        
        if (selectedProducts.length === 0) {
            container.html('<p class="text-muted">No products selected</p>');
            return;
        }
        
        let html = '<div class="table-responsive"><table class="table table-bordered">';
        html += '<thead><tr><th>Name</th><th>Code</th><th>Variant</th><th>Price</th><th>Quantity</th></tr></thead><tbody>';
        
        selectedProducts.forEach(function(product, index) {
            html += `<tr>
                <td>${product.name}</td>
                <td>${product.code}</td>
                <td>${product.variant}</td>
                <td>à§³${product.price}</td>
                <td>${product.quantity}</td>
            </tr>`;
        });
        
        html += '</tbody></table></div>';
        container.html(html);
    }
    
    function updateDebugInfo() {
        $('#productsCount').text(selectedProducts.length);
        $('#tableVisible').text(selectedProducts.length > 0);
    }
    
    function displayResults(title, data) {
        const display = $('#resultsDisplay');
        const timestamp = new Date().toLocaleTimeString();
        const result = `[${timestamp}] ${title}:\n${JSON.stringify(data, null, 2)}\n\n`;
        
        display.append(result);
        display.scrollTop(display[0].scrollHeight);
    }
    
    // Clear results
    function clearResults() {
        $('#resultsDisplay').empty();
    }
    
    // Add clear button
    $(document).ready(function() {
        $('#apiResults').prepend('<button class="btn btn-warning btn-sm" onclick="clearResults()">Clear Results</button>');
    });
</script>
